description: >
  Upload assets to an existing GitHub Release.
  Specify a tag matching the release with the `tag` parameter (required).
  See more at https://cli.github.com/manual/gh_release_upload.
  This requires write:packages permissions.
docker:
  - image: cimg/base:stable

resource_class: small

parameters:
  additional_args:
    type: string
    default: ""
    description: "Enter any additional arguments to pass to the `gh release upload` command (e.g. --clobber)"
  files:
    description: "To include a subset of your repository's files in the release, enter the file glob here. (e.g. ./dist/*.tgz) "
    type: string
  hostname:
    type: string
    default: "github.com"
    description: >
      Specify the hostname of the GitHub instance to authenticate with.
      Set this to connect to your GitHub Enterprise instance.
  tag:
    type: string
    default: "$CIRCLE_TAG"
    description: >
      Specify the tag which the asset files will be uploaded to.
      A GitHub Release matching the tag must already exist.
  token:
    type: env_var_name
    default: "GITHUB_TOKEN"
    description: >
      Enter the name of the environment variable containing the GitHub Personal Access token to be used for authentication.
      It is recommended for CI processes that you create a "machine" user on GitHub.com with the needed permissions, rather than using your own.
  version:
    type: string
    default: "2.20.2"
    description: Specify the full semver versioned tag to use for the GitHub CLI installation.
  dir:
    type: string
    default: "."
    description: |
      Select the path to clone into. By default the current path will be selected, which is dictated by the job's "working_directory".
      The upload will be done from this path.
  clone:
    type: boolean
    default: true
    description: Whether or not clone the repo. Defaults to true. Set to false if you already cloned the repo.

steps:
  - install:
      version: <<parameters.version>>
  - when:
      condition: <<parameters.clone>>
      steps:
      - clone:
          dir: <<parameters.dir>>
          hostname: <<<parameters.hostname>>
  - run:
      name: "Uploading assets to GitHub Release"
      environment:
        ORB_EVAL_ADDITIONAL_ARGS: <<parameters.additional_args>>
        ORB_EVAL_FILES: <<parameters.files>>
        ORB_EVAL_HOSTNAME: <<parameters.hostname>>
        ORB_EVAL_TAG: <<parameters.tag>>
        ORB_ENV_TOKEN: <<parameters.token>>
        PARAM_DIR: <<parameters.dir>>
      command: <<include(scripts/upload.sh)>>
