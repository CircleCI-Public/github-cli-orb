description: >
  Create a new GitHub Release for a repository.
  Specify a tag with the `tag` parameter (required). If a matching git tag does not yet exist, one will automatically get created from the latest state of the default branch.

docker:
  - image: cimg/base:stable

resource_class: small

parameters:
  tag:
    type: string
    description: "Select a tag to create a release from. If a matching git tag does not yet exist, one will automatically get created from the latest state of the default branch."
  notes-file:
    description: "Path to file containing release notes (e.g.: ./changelog.md). "
    default: ""
    type: string
  draft:
    type: boolean
    default: false
    description: Save the release as a draft instead of publishing it.
  prerelease:
    type: boolean
    default: false
    description: Mark the release as a prerelease.
  files:
    description: "To include a subset of your repository's files in the release, enter the file glob here. (e.g. ./dist/*.tgz) "
    default: ""
    type: string
  title:
    description: "Include a release title. "
    type: string
    default: ""
  version:
    type: string
    default: "2.3.0"
    description: Specify the full semver versioned tag to use for the GitHub CLI installation.
  hostname:
    type: string
    default: "github.com"
    description: Specify the hostname of the GitHub instance to authenticate with. Set this to connect to your GitHub Enterprise instance.
  token:
    type: env_var_name
    default: "GITHUB_TOKEN"
    description: |
      Enter the name of the environment variable containing the GitHub Personal Access token to be used for authentication.
      It is recommended for CI processes that you create a "machine" user on GitHub.com with the needed permissions, rather than using your own.
steps:
  - install:
      version: <<parameters.version>>
  - clone
  - run:
      name: "Creating a <<#parameters.draft>><<parameters.draft>> <</parameters.draft>>GitHub Release"
      environment:
        PARAM_GH_TOKEN: <<parameters.token>>
        PARAM_GH_HOSTNAME: <<parameters.hostname>>
        PARAM_GH_TAG: <<parameters.tag>>
        PARAM_GH_NOTES: <<parameters.notes-file>>
        PARAM_GH_DRAFT: <<parameters.draft>>
        PARAM_GH_PRERELEASE: <<parameters.prerelease>>
        PARAM_GH_FILES: <<parameters.files>>
        PARAM_GH_TITLE: <<parameters.title>>
      command: <<include(scripts/release.sh)>>
